[{"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\index.js":"1","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\reportWebVitals.js":"2","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\App.js":"3","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\layout\\layout.js":"4","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\clock.js":"5","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product.js":"6","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\route.js":"7","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\pages.js":"8","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\main.js":"9","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\breadcrumb.js":"10","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\admin.js":"11","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product_page.js":"12","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\shopp_cart.js":"13","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\tools\\event_emitter.js":"14","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\addto_cart_button.js":"15","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\login.js":"16","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\reset_password.js":"17","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\orders.js":"18"},{"size":504,"mtime":1614865240505,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":442,"mtime":1617172019039,"results":"22","hashOfConfig":"20"},{"size":6341,"mtime":1620374024077,"results":"23","hashOfConfig":"20"},{"size":650,"mtime":1612425831483,"results":"24","hashOfConfig":"20"},{"size":2239,"mtime":1617174122853,"results":"25","hashOfConfig":"20"},{"size":1118,"mtime":1619010783953,"results":"26","hashOfConfig":"20"},{"size":484,"mtime":1619008495042,"results":"27","hashOfConfig":"20"},{"size":586,"mtime":1615371821536,"results":"28","hashOfConfig":"20"},{"size":1474,"mtime":1620374024077,"results":"29","hashOfConfig":"20"},{"size":20532,"mtime":1619273167622,"results":"30","hashOfConfig":"20"},{"size":4166,"mtime":1617172708814,"results":"31","hashOfConfig":"20"},{"size":8026,"mtime":1620374024077,"results":"32","hashOfConfig":"20"},{"size":74,"mtime":1615275368418,"results":"33","hashOfConfig":"20"},{"size":1001,"mtime":1615391480400,"results":"34","hashOfConfig":"20"},{"size":2970,"mtime":1617115592132,"results":"35","hashOfConfig":"20"},{"size":4005,"mtime":1617972851969,"results":"36","hashOfConfig":"20"},{"size":2869,"mtime":1620374019707,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4r9nsy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\index.js",[],["84","85"],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\reportWebVitals.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\App.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\layout\\layout.js",["86","87"],"import React, { useState, useEffect } from 'react';\r\nimport Clock from '../partials/clock';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ShoppingCart from '../shopp_cart'\r\n\r\n//layout\r\nexport default function Layout(props) {\r\n    const [list, setList] = useState([]);\r\n    const [userName, setName] = useState(\"\");\r\n    const [flag, setFlag] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/category.php\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        //console.log(list);\r\n\r\n        axios.get(\"/admin/login.php\", { params: { userName: \"check\" } })\r\n            .then(res => {\r\n                setName(res.data[0]);\r\n                setFlag(res.data[1]);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n\r\n    function handleLogout(e) {\r\n        e.preventDefault();\r\n        axios.get(\"/admin/login.php\", { params: { \"logout\": \"true\" } })\r\n            .then(res => {\r\n                if (res.data === \"successful\") {\r\n                    window.location.replace(\"/\");\r\n                } else if (res.data === \"failed\") {\r\n                    alert(\"Failed to logout.\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">GLOBAL SHOP</Link>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                {\r\n                                    flag === \"1\"\r\n                                        ? <Link to=\"/backend/admin\" className=\"nav-link\">Admin Panel</Link>\r\n                                        : <div />\r\n                                }\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n                                    userName\r\n                                        ? <Link to=\"/orders\" className=\"nav-link\">My orders</Link>\r\n                                        : <div />\r\n                                }\r\n                            </li>\r\n                        </ul>\r\n                        {\r\n                            userName\r\n                                ? <div className=\"my-2 my-lg-0 d-flex\">\r\n                                    <div className=\"mr-3\">{userName}</div>\r\n                                    <Link className=\"mr-3 text-dark login-nav\" onClick={handleLogout}>Logout</Link>\r\n                                    <Link to=\"/backend/reset\" className=\"mr-3 text-dark login-nav\">Reset Password</Link>\r\n                                    <ShoppingCart />\r\n                                </div>\r\n                                : <div className=\"my-2 my-lg-0 d-flex\">\r\n                                    <div className=\"mr-3\">Guest</div>\r\n                                    <Link to=\"/backend/login\" className=\"mr-3 text-dark login-nav\">Login</Link>\r\n                                    <ShoppingCart />\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <nav className=\"nav d-flex\">\r\n                    {list.map((catName) => {\r\n                        return <Link to={`/${catName.name}`} className=\"p-2 text-muted fs-2\">{catName.name}</Link>\r\n                    })}\r\n                </nav>\r\n            </div>\r\n            {props.children}\r\n            <footer className=\"text-muted\"> @2021 All rights reserved to Justin</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n{/*<nav className=\"navbar navbar-expand-lg\">\r\n                <h2 className=\"navbar-brand\"><Link to=\"/\">GLOBAL SHOP</Link></h2>\r\n                <div className=\"collaspe navbar-collapse\">\r\n                    <div className=\"navbar-nav\">\r\n\r\n                        <Clock className=\"nav-item\" />\r\n                        <Link to=\"/backend/admin\" className=\"nav-item\">Admin Panel</Link>\r\n                        <div className=\"cart nav-item\">\r\n                            Shopping Cart\r\n                                <div className=\"drop-down\">\r\n                                <table className=\"cart-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Item</th>\r\n                                            <th>Quantity</th>\r\n                                            <th>Price</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Item 1</td>\r\n                                            <td><input type=\"number\" className=\"item-input\"></input></td>\r\n                                            <td>@ $100</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Item 2</td>\r\n                                            <td><input type=\"number\" className=\"item-input\"></input></td>\r\n                                            <td>@ $100</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                    Total Price: $200\r\n                                    <button type=\"button\" className=\"btn btn-secondary\">Checkout</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"category-list nav-item\">\r\n                            {list.map((catName) => {\r\n                                return <p><Link to={`/${catName.name}`}>{catName.name}</Link></p>\r\n                            })}\r\n                            Shoes\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>*/}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\clock.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product.js",["88"],"import React, { useState, useEffect } from 'react';\r\nimport BreadCrumb from './partials/breadcrumb';\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddToCartButon from './partials/addto_cart_button'\r\n\r\n//product page\r\nexport default function Product(props) {\r\n    const [list, setList] = useState([]);\r\n    var { id } = useParams();\r\n    const link = props.location.pathname.slice(1).split(\"/\");\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/product.php\";\r\n        axios.get(url, { params: { pid: id } })\r\n            .then(res => {\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n\r\n    const onMatchedRoutes = (matchedRoutes) => {\r\n        return [\r\n            ...matchedRoutes.slice(0, 1),\r\n            {\r\n                route: {\r\n                    path: `/${link[0]}`,\r\n                    breadcrumbName: link[0]\r\n                }\r\n            },\r\n            {\r\n                route: {\r\n                    path: `/${link[0]}/${link[1]}`,\r\n                    breadcrumbName: link[1]\r\n                }\r\n            }\r\n        ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                list.length > 0\r\n                    ? <div>\r\n                        <BreadCrumb locationPathname={props.location.pathname} onMatchedRoutes={onMatchedRoutes} />\r\n                        {list.map((info, index) => {\r\n                            return <div className=\"product-info d-flex\">\r\n                                <img src={`data:image/png;base64,${info.image}`} alt=\"Shoe\" className=\"content-img\"></img>\r\n                                <div className=\"ml-4\">\r\n                                    <h2>{info.name}</h2>\r\n                                    <p>Price: ${info.price}</p>\r\n                                    <AddToCartButon pid={id} />\r\n                                    <div>Description: <p>{info.description}</p> </div>\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    : <h1 className=\"text-center mt-5 mb-5\">......</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\route.js",["89","90"],"import { useParams } from 'react-router-dom';\r\nimport { Main, Product, Admin, ProductPage, Login, ResetPassword, Orders } from './pages';\r\nimport axios from 'axios';\r\n\r\nconst rootPath = process.env.PUBLIC_URL;\r\n\r\nvar routes = [\r\n  {\r\n    path: `${rootPath}/`,\r\n    component: Main,\r\n    exact: true,\r\n    breadcrumbName: \"Home\"\r\n  },\r\n  {\r\n    path: `${rootPath}/backend/admin`,\r\n    exact: true,\r\n    component: Admin\r\n  },\r\n  {\r\n    path: `${rootPath}/backend/login`,\r\n    exact: true,\r\n    component: Login\r\n  },\r\n  {\r\n    path: `${rootPath}/backend/reset`,\r\n    exact: true,\r\n    component: ResetPassword\r\n  },\r\n  {\r\n    path: `${rootPath}/orders`,\r\n    exact: true,\r\n    component: Orders\r\n  },\r\n  {\r\n    path: `${rootPath}/orders/:id`,\r\n    component: Orders,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: `${rootPath}/:catid`,\r\n    component: ProductPage,\r\n    breadcrumbName: \"Category\",\r\n    routes: [\r\n      {\r\n        path: `${rootPath}/:catid/:id`,\r\n        exact: true,\r\n        component: Product,\r\n        breadcrumbName: \"Product\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"*\"\r\n  }\r\n];\r\n\r\nexport default routes;","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\pages.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\main.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\breadcrumb.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\admin.js",["91","92","93","94","95","96"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//admin page\r\nexport default class Admin extends React.Component {\r\n    constructor() {\r\n        super();\r\n        var fetch = false;\r\n        this.state = {\r\n            CategoryName: \"\",\r\n            ProductName: \"\",\r\n            price: 0,\r\n            description: \"\",\r\n            catList: [],\r\n            productList: [],\r\n            productCatid: 0,\r\n            productId: 0,\r\n            action: \"\",\r\n            toChange: \"\",\r\n            image: [],\r\n            orders: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        var url = \"/admin/login.php\";\r\n        axios.get(url, { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                if (res.data[0] === \"notLoggedIn\") {\r\n                    window.location.replace(\"/\");\r\n                } else if (res.data[0] === \"auth\" && res.data[1] === \"0\") {\r\n                    window.location.replace(\"/\");\r\n                } else {\r\n                    fetch = true;\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        axios.get(\"/admin/orders.php\", { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                if (res.data[\"status\"] === \"successful\") {\r\n                    this.setState({\r\n                        orders: res.data[\"message\"].map((data, index) => {\r\n                            return <tr>\r\n                                <th scope=\"row\">{index}</th>\r\n                                <td>{data.username}</td>\r\n                                <td><Link to={`/orders/${data.invoice}`}>{data.invoice}</Link></td>\r\n                                <td>{data.custom}</td>\r\n                                <td>{data.txnid}</td>\r\n                                <td>{data.payment_status}</td>\r\n                            </tr>\r\n                        })\r\n                    });\r\n                } else if (res.data[\"status\"] === \"failed\") {\r\n                    alert(res.data[\"message\"]);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData() {\r\n        var url = \"/admin/category.php\";\r\n        axios.get(url, { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ catList: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        url = \"/admin/product.php\";\r\n        axios.get(url, { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ productList: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    handleInput = async e => {\r\n        if (e.target.name === \"image\") {\r\n            this.setState({ image: e.target.files[0] })\r\n            console.log(e.target.files[0]);\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        console.log(e.target.name);\r\n        console.log(this.state.action);\r\n    }\r\n\r\n    handleCategorySumbit = e => {\r\n        e.preventDefault();\r\n        this.handleInput(e);\r\n        let formData = new FormData();\r\n        formData.append(\"name\", this.state.CategoryName);\r\n        formData.append(\"action\", e.target.value);\r\n        formData.append(\"category\", this.state.productCatid);\r\n        formData.append(\"toChange\", this.state.toChange);\r\n        const url = \"/admin/category.php\";\r\n        axios.post(url, formData, { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                if (res.data[\"status\"] === \"successful\") {\r\n                    alert(res.data[\"message\"]);\r\n                    this.fetchData();\r\n                } else if (res.data[\"status\"] === \"failed\") {\r\n                    alert(res.data[\"message\"]);\r\n                }\r\n                //window.location.reload()\r\n            })\r\n            .catch(err => console.log(err));\r\n        //console.log(this.state.CategoryName)\r\n    }\r\n\r\n    handleProductSumbit = e => {\r\n        e.preventDefault();\r\n        this.handleInput(e);\r\n        let formData = new FormData();\r\n        formData.append(\"name\", this.state.ProductName);\r\n        formData.append(\"price\", this.state.price);\r\n        formData.append(\"description\", this.state.description);\r\n        formData.append(\"category\", this.state.productCatid);\r\n        formData.append(\"action\", e.target.value);\r\n        formData.append(\"pid\", this.state.productId);\r\n        formData.append(\"toChange\", this.state.toChange);\r\n        formData.append(\"image\", this.state.image);\r\n        const url = \"/admin/product.php\";\r\n        axios.post(url, formData, { xsrfCookieName: 'XSRF-TOKEN', xtxsrfHeaderName: 'X-XSRF-TOKEN' })\r\n            .then(res => {\r\n                if (res.data[\"status\"] === \"successful\") {\r\n                    alert(res.data[\"message\"]);\r\n                    this.fetchData();\r\n                } else if (res.data[\"status\"] === \"failed\") {\r\n                    alert(res.data[\"message\"]);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n        //console.log(this.state.CategoryName)\r\n    }\r\n\r\n    render() {\r\n        if (fetch === true) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"py-5 text-center\">\r\n                        <h2>Admin Panel</h2>\r\n                        <h6 className=\"text-danger\">*items must be filled in</h6>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">New Product</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Category<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <select className=\"custom-select\" name=\"productCatid\" onChange={this.handleInput}>\r\n                                            <option value=\"default\">Choose...</option>\r\n                                            {this.state.catList.map((info, index) => {\r\n                                                return <option value={info.catid}>{info.name}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Name<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"ProductName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Price (at most 2 decimal place)<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"price\" placeholder=\"Price\" required=\"\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Description</label>\r\n                                    <div className=\"input-group\">\r\n                                        <textarea className=\"form-control\" name=\"description\" rows=\"3\" onChange={this.handleInput}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Image<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Upload</span>\r\n                                        </div>\r\n                                        <div className=\"custom-file\">\r\n                                            <input type=\"file\" className=\"custom-file-input\" name=\"image\" onChange={this.handleInput}></input>\r\n                                            {this.state.image == \"\" ? <label className=\"custom-file-label\" htmlFor=\"image\">Choose one</label> : <label className=\"custom-file-label\" htmlFor=\"image\">{this.state.image.name}</label>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlFor=\"username\">Preview</label>\r\n                                        {this.state.image != \"\" ? <img src={URL.createObjectURL(this.state.image)} alt=\"product\" className=\"list-img\"></img> : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"addProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">New Category</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Name<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"CategoryName\" placeholder=\"Name\" required=\"\" name=\"CategoryName\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"addCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">Delete Product</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Choose one<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <select className=\"custom-select\" name=\"productId\" onChange={this.handleInput}>\r\n                                            <option value=\"default\">Choose...</option>\r\n                                            {this.state.productList.map((info, index) => {\r\n                                                return <option value={info.pid}>{info.name}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"deleteProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">Delete Category</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Choose one</label>\r\n                                    <div className=\"input-group\">\r\n                                        <select className=\"custom-select\" name=\"productCatid\" onChange={this.handleInput}>\r\n                                            <option value=\"default\" >Choose...</option>\r\n                                            {this.state.catList.map((info, index) => {\r\n                                                return <option value={info.catid}>{info.name}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"deleteCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">Update Product</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <p>Fill in all infomation or it will get empty.</p>\r\n                                    <label htmlFor=\"username\">Which one to change?<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <select className=\"custom-select\" name=\"toChange\" onChange={this.handleInput}>\r\n                                            <option value=\"default\">Choose...</option>\r\n                                            {this.state.productList.map((info, index) => {\r\n                                                return <option value={info.pid}>{info.name}, ${info.price}, {info.description}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Name<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"ProductName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Price (at most 2 decimal place)<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"price\" placeholder=\"Price\" required=\"\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Description</label>\r\n                                    <div className=\"input-group\">\r\n                                        <textarea className=\"form-control\" name=\"description\" rows=\"3\" onChange={this.handleInput}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Image<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Upload</span>\r\n                                        </div>\r\n                                        <div className=\"custom-file\">\r\n                                            <input type=\"file\" className=\"custom-file-input\" name=\"image\" onChange={this.handleInput}></input>\r\n                                            {this.state.image == \"\" ? <label className=\"custom-file-label\" htmlFor=\"image\"><span className=\"text-danger\">*</span></label> : <label className=\"custom-file-label\" htmlFor=\"image\">{this.state.image.name}</label>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlFor=\"username\">Preview</label>\r\n                                        {this.state.image != \"\" ? <img src={URL.createObjectURL(this.state.image)} alt=\"product\" className=\"list-img\"></img> : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"updateProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 order-md-1\">\r\n                            <h4 className=\"mb-3\">Update Category</h4>\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"username\">Choose one<span className=\"text-danger\">*</span></label>\r\n                                    <div className=\"input-group\">\r\n                                        <select className=\"custom-select\" name=\"toChange\" onChange={this.handleInput}>\r\n                                            <option value=\"default\">Choose...</option>\r\n                                            {this.state.catList.map((info, index) => {\r\n                                                return <option value={info.catid}>{info.name}</option>\r\n                                            })}\r\n                                        </select>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"CategoryName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <button className=\"btn btn-dark\" name=\"action\" value=\"updateCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <h4 className=\"mb-3\">Order records</h4>\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">username</th>\r\n                                <th scope=\"col\">invoice</th>\r\n                                <th scope=\"col\">custom</th>\r\n                                <th scope=\"col\">transcation ID</th>\r\n                                <th scope=\"col\">payment status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.orders}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"py-5 text-center\">\r\n                        Please wait or you are not authorized.\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product_page.js",["97","98","99"],"import list_title from '../assets/images/list-title.jpg';\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport BreadCrumb from './partials/breadcrumb';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Product } from '../pages'\r\nimport EventEmitter from './tools/event_emitter'\r\nimport AddToCartButon from './partials/addto_cart_button'\r\n\r\n//main page\r\nfunction ProductPage() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/:cat\" exact component={Item} />\r\n            <Route path=\"/:cat/:id\" component={Product} />\r\n        </Switch>\r\n    );\r\n}\r\nexport default ProductPage;\r\n\r\nfunction Item(props) {\r\n    const [list, setList] = useState([]);\r\n    const items = [];\r\n    //const [catList, setCatList] = useState([]);\r\n    const { url } = useRouteMatch();\r\n    var type = url.substring(1);\r\n    /*const para = useParams().cat;\r\n    var inside = false;*/\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/product.php\";\r\n        axios.get(url, { params: { catName: type } })\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        //console.log(list);\r\n        /*axios.get(\"/admin/category.php\")\r\n            .then(res => {\r\n                setCatList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        if (catList.includes(para)) inside = true;*/\r\n    }, [url])\r\n\r\n    {\r\n        list.map((info, index) => {\r\n            items.push(\r\n                <div className=\"product col-md-4\">\r\n                    <div className=\"card mb-5 border-0\">\r\n                        <Link to={`${url}/${list[index].pid}`}>\r\n                            <img src={`data:image/png;base64,${list[index].image}`} alt=\"Shoe\" className=\"card-img-top list-img\"></img>\r\n                        </Link>\r\n                        <hr className=\"mb-0\" />\r\n                        <div className=\"card-body pt-1\">\r\n                            <div className=\"card-text text-center\">\r\n                                <Link to={`${url}/${list[index].pid}`}>{info.name}</Link>\r\n                                <p className=\"m-0\">Price ${info.price}</p>\r\n                                <AddToCartButon pid={info.pid} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            return items;\r\n        })\r\n    }//production\r\n\r\n    /*{\r\n        items.push(\r\n            <div className=\"product col-md-4\">\r\n                <div className=\"card mb-5 border-0\">\r\n                    <Link to=\"\">\r\n                        <img src=\"\" alt=\"Shoe\" className=\"card-img-top list-img\"></img>\r\n                    </Link>\r\n                    <hr className=\"mb-0\" />\r\n                    <div className=\"card-body pt-1\">\r\n                        <div className=\"card-text text-center\">\r\n                            <Link to=\"\">dsdsds</Link>\r\n                            <p className=\"m-0\">Price $23232323</p>\r\n                            <AddToCartButon list={list} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }///testing*/\r\n\r\n    const onMatchedRoutes = (matchedRoutes) => {\r\n        return [\r\n            ...matchedRoutes.slice(0, -1),\r\n            {\r\n                route: {\r\n                    path: `/${type}`,\r\n                    breadcrumbName: type\r\n                }\r\n            }\r\n        ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {items.length > 0 ?\r\n                [\r\n                    <BreadCrumb locationPathname={props.location.pathname} onMatchedRoutes={onMatchedRoutes} />,\r\n                    <div className=\"list-title\">\r\n                        <img src={list_title} alt=\"list-title\"></img>\r\n                    </div>,\r\n                    <div className=\"row\">\r\n                        {items}\r\n                    </div>,\r\n                ]\r\n                : <h1 className=\"text-center\">.......</h1>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\shopp_cart.js",["100","101","102","103","104"],"import React from 'react';\r\nimport EventEmitter from './tools/event_emitter'\r\nimport axios from 'axios';\r\n\r\nexport default class ShoppingCart extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            rawCartList: [],\r\n            parseCartList: [],\r\n            totalPrice: 0,\r\n            custom: \"\",\r\n            invoice: 0\r\n        };\r\n        this.updateCart = this.updateCart.bind(this);\r\n    }\r\n\r\n    getCartInfo() {\r\n        const url = \"/admin/product.php\";\r\n        axios.get(url, { params: { rawCartList: JSON.stringify(this.state.rawCartList) } })\r\n            .then(res => {\r\n                this.setState({\r\n                    parseCartList: res.data\r\n                }, () => {\r\n                    this.calTotalPrice();\r\n                });\r\n            })\r\n            .catch(error => { console.log(error) });\r\n    }\r\n\r\n    calTotalPrice() {\r\n        var total = 0;\r\n        this.state.parseCartList.map((data, index) => {\r\n            total += parseFloat(data.price, 10) * this.state.rawCartList[index].quan;\r\n        })\r\n        //console.log(total);\r\n        this.setState({\r\n            totalPrice: total\r\n        })\r\n    }\r\n\r\n    updateCart(event) {\r\n        this.setState({\r\n            rawCartList: event.items\r\n        }, () => {\r\n            this.getCartInfo();\r\n        });\r\n    }\r\n\r\n    getLocalStorage() {\r\n        var items = [];\r\n        var json = localStorage.getItem(\"cart\");\r\n        //console.log(json);\r\n        if (json !== null) {\r\n            JSON.parse(json).map((data, i) => {\r\n                //console.log(data);\r\n                items.push(data);\r\n            })\r\n        }\r\n        return items;\r\n    }\r\n\r\n    changeQuan = e => {\r\n        var json = localStorage.getItem(\"cart\");\r\n        var items = [];\r\n        //console.log(e.target.name);\r\n        if (json !== null) {\r\n            JSON.parse(json).map((data, i) => {\r\n                if (data.pid !== e.target.name) {\r\n                    items.push(data);\r\n                } else {\r\n                    if (e.target.value !== \"0\") {\r\n                        data.quan = parseInt(e.target.value, 10);\r\n                        items.push(data);\r\n                    }\r\n                }\r\n            });\r\n            localStorage.removeItem(\"cart\");\r\n            localStorage.setItem(\"cart\", JSON.stringify(items));\r\n            this.setState({\r\n                rawCartList: items\r\n            }, () => {\r\n                this.calTotalPrice();\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    removeItem(index) {\r\n        var tmpParse = [...this.state.parseCartList];\r\n        var tmpRaw = [...this.state.rawCartList];\r\n        var items = this.getLocalStorage();\r\n        tmpParse.splice(index, 1);\r\n        tmpRaw.splice(index, 1);\r\n        items.splice(index, 1);\r\n        localStorage.removeItem(\"cart\");\r\n        localStorage.setItem(\"cart\", JSON.stringify(items));\r\n        this.setState({\r\n            parseCartList: tmpParse,\r\n            rawCartList: tmpRaw\r\n        }, () => {\r\n            this.calTotalPrice();\r\n        });\r\n    }\r\n\r\n    cartSubmit(e) {\r\n        e.preventDefault();\r\n        //console.log(e.target[7]);\r\n        var formData = new FormData();\r\n        var upload = {};\r\n        if (this.state.rawCartList.length > 0) {\r\n            for (var i = 0; i < this.state.rawCartList.length; i++) {\r\n                var id = this.state.rawCartList[i].pid;\r\n                upload[id] = this.state.rawCartList[i].quan;\r\n            }\r\n        };\r\n        //console.log(upload);\r\n        formData.append(\"upload\", JSON.stringify(upload));\r\n        axios.post(\"/admin/checkout_process.php\", formData)\r\n            .then(res => {\r\n                this.setState({\r\n                    custom: res.data[\"custom\"],\r\n                    invoice: res.data[\"invoice\"]\r\n                }, () => {\r\n                    //console.log(this.state.custom);\r\n                    //console.log(this.state.invoice);\r\n                    e.target.submit();\r\n                    localStorage.removeItem(\"cart\");\r\n                });\r\n                //window.location.replace(\"/\");\r\n            })\r\n            .catch(error => { console.log(error) });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var items = this.getLocalStorage();\r\n        this.setState({\r\n            rawCartList: items\r\n        }, () => {\r\n            //console.log(\"list\" + this.state.rawCartList);\r\n            if (this.state.rawCartList.length > 0) {\r\n                this.getCartInfo();\r\n            }\r\n        });\r\n\r\n        const listener = EventEmitter.addListener(\"updateCart\", this.updateCart);\r\n        return () => {\r\n            listener.remove();\r\n        }\r\n    }\r\n//action=\"https://www.sandbox.paypal.com/us/cgi-bin/webscr\"\r\n    render() {\r\n        return (\r\n            <div className=\"cart\">\r\n                Shopping Cart\r\n                <div className=\"drop-down\">\r\n                    <form method=\"post\" onSubmit={this.cartSubmit.bind(this)} action=\"https://www.sandbox.paypal.com/us/cgi-bin/webscr\">\r\n                        <input type=\"hidden\" name=\"cmd\" value=\"_cart\" />\r\n                        <input type=\"hidden\" name=\"upload\" value=\"1\" />\r\n                        <input type=\"hidden\" name=\"business\" value=\"sb-4q32t5876156@business.example.com\" />\r\n                        <input type=\"hidden\" name=\"currency_code\" value=\"HKD\" />\r\n                        <input type=\"hidden\" name=\"charset\" value=\"utf-8\" />\r\n                        {this.state.parseCartList.map((data, index) => {\r\n                            if (this.state.rawCartList.length > 0) {\r\n                                return [\r\n                                    <input type=\"hidden\" name={`item_name_${index + 1}`} value={data.name} />,\r\n                                    <input type=\"hidden\" name={`amount_${index + 1}`} value={data.price} />,\r\n                                    <input type=\"hidden\" name={`quantity_${index + 1}`} value={this.state.rawCartList[index].quan} />\r\n                                ]\r\n                            }\r\n                        })}\r\n                        <input type=\"hidden\" name=\"custom\" value={this.state.custom} />\r\n                        <input type=\"hidden\" name=\"invoice\" value={this.state.invoice} />\r\n                        <table className=\"cart-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Item</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Price</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.parseCartList.map((data, index) => {\r\n                                    if (this.state.rawCartList.length > 0) {\r\n                                        return <tr>\r\n                                            <td>{data.name}</td>\r\n                                            <td><input type=\"number\" className=\"item-input\" placeholder={this.state.rawCartList.length > 0 ? this.state.rawCartList[index].quan : \"\"} onChange={this.changeQuan} name={this.state.rawCartList.length > 0 ? this.state.rawCartList[index].pid : \"\"} value={this.state.rawCartList.length > 0 ? this.state.rawCartList[index].quan : \"\"} min=\"1\"></input></td>\r\n                                            <td>${data.price}</td>\r\n                                            <td><button className=\"btn btn-danger ml-2\" onClick={() => { this.removeItem(index) }}>Delete</button></td>\r\n                                        </tr>\r\n                                    }\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <div>Total Price: ${this.state.totalPrice}</div>\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Checkout\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\tools\\event_emitter.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\addto_cart_button.js",["105"],"import React from 'react'\r\nimport EventEmitter from '../tools/event_emitter'\r\n\r\nexport default function CartButton(props) {\r\n    function addToCart(pid, num) {\r\n        var items = [];\r\n        var json = localStorage.getItem(\"cart\");\r\n        var check = false;\r\n        if (json !== null) {\r\n            JSON.parse(json).map((data, i) => {\r\n                if (data.pid === pid) {\r\n                    var num = parseInt(data.quan, 10);\r\n                    num += 1;\r\n                    data.quan = num;\r\n                    check = true;\r\n                }\r\n                items.push(data);\r\n            })\r\n        }\r\n        if (check === false) items.push({ \"pid\": pid, \"quan\": num });\r\n        localStorage.setItem('cart', JSON.stringify(items));\r\n        //emit event\r\n        EventEmitter.emit(\"updateCart\", {\r\n            items: items\r\n        })\r\n    }\r\n\r\n    return(\r\n        <button className=\"btn btn-primary add\" onClick={() => addToCart(props.pid, 1)}>Add to cart</button>\r\n    )\r\n}","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\login.js",["106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//login page\r\nexport default function Login(props) {\r\n    var [email, setEmail] = useState(\"\");\r\n    var [pw, setPw] = useState(\"\");\r\n    var checkCookie = true;\r\n    var [error, setError] = useState(\"\");\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        if (email === \"\" || pw === \"\") {\r\n            setError(\"Please enter all information\");\r\n        } else {\r\n            var url = \"/admin/login.php\"\r\n            let formData = new FormData();\r\n            formData.append(\"email\", email);\r\n            formData.append(\"password\", pw);\r\n            axios.post(url, formData)\r\n                .then(res => {\r\n                    //console.log(res.data);\r\n                    //console.log(res.data[\"status\"]);\r\n                    if (res.data[\"status\"] === \"successful\") {\r\n                        window.location.replace(\"/\");\r\n                    } else if (res.data[\"status\"] === \"failed\") {\r\n                        setError(res.data[\"message\"]);\r\n                    }\r\n                })\r\n                .catch(err => { console.log(err.data) });\r\n        }\r\n    }\r\n\r\n    function handleInput(e) {\r\n        if (e.target.type === \"email\") {\r\n            setEmail(e.target.value);\r\n        } else if (e.target.type === \"password\") {\r\n            setPw(e.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/admin/login.php\")\r\n            .then((res) => {\r\n                if (res.data[0] === \"notLoggedIn\") {\r\n                    checkCookie = false;\r\n                } else {\r\n                    checkCookie = true;\r\n                }\r\n                if (checkCookie) {\r\n                    window.location.replace(\"/\");\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h1 className=\"py-5\">Please Login</h1>\r\n            {error ? <h4 className=\"text-danger mb-5\">{error}</h4> : <div></div>}\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div>\r\n                        <label>Username:</label>\r\n                        <div>\r\n                            <input type=\"email\" placeholder=\"abc@mail.com\" onChange={handleInput}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <label>Password:</label>\r\n                        <div>\r\n                            <input type=\"password\" onChange={handleInput}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-3 login-box\">\r\n                        <button className=\"btn btn-dark\" onClick={handleLogin}>Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\reset_password.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\orders.js",["109","110","111"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, Switch, Route, useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Orders() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/orders/:id\">\r\n                    <OrderPage />\r\n                </Route>\r\n                <Route path=\"/orders\">\r\n                    <Order />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Order(props) {\r\n    var [list, setList] = useState([]);\r\n    var username = \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/admin/login.php\", { params: { userName: \"check\" } })\r\n            .then(res => {\r\n                username = res.data[0];\r\n                axios.get(\"/admin/orders.php\", { params: { username: username } })\r\n                .then(result => {\r\n                    setList(result.data[\"invoice\"].map((data, index) => {\r\n                        return <li class=\"list-group-item\"><Link to={`/orders/${data[\"invoice\"]}`}>{data[\"invoice\"]}</Link></li>\r\n                    }))\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text-center\">\r\n                <h2>Past 5 orders</h2>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <ul class=\"list-group list-group-flush\">\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction OrderPage(props) {\r\n    var [list, setList] = useState([]);\r\n    var [price, setPrice] = useState(0);\r\n    const { order, id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        //console.log(\"id\" + id);\r\n        var totalPrice = 0;\r\n        axios.get(\"/admin/orders.php\", { params: { id: id } })\r\n            .then(res => {\r\n                setList(res.data[\"message\"].map(data => {\r\n                    totalPrice += parseFloat(data[\"price\"], 10) * parseFloat(data[\"quantity\"], 10);\r\n                    if (!data[\"payment_status\"]) {\r\n                        data[\"payment_status\"] = \"pending\";\r\n                    }\r\n                    return <li class=\"list-group-item\">Product Name: {data[\"product_name\"]}  Quantity: {data[\"quantity\"]} Price: ${data[\"price\"]} Status: {data[\"payment_status\"]}</li>\r\n                }))\r\n                //console.log(totalPrice);\r\n                setPrice(totalPrice);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"py-5 text-center\">\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <ul class=\"list-group list-group-flush\">\r\n                    {list}\r\n                </ul>\r\n                <h2>Total Price: ${price}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":96,"column":1,"nodeType":"122","messageId":"123","endLine":139,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":10,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":19},{"ruleId":"116","severity":1,"message":"129","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":9,"column":13,"nodeType":"118","messageId":"119","endLine":9,"endColumn":18},{"ruleId":"112","severity":1,"message":"131","line":35,"column":21,"nodeType":"118","messageId":"132","endLine":35,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":196,"column":63,"nodeType":"135","messageId":"136","endLine":196,"endColumn":65},{"ruleId":"133","severity":1,"message":"137","line":201,"column":59,"nodeType":"135","messageId":"136","endLine":201,"endColumn":61},{"ruleId":"133","severity":1,"message":"134","line":306,"column":63,"nodeType":"135","messageId":"136","endLine":306,"endColumn":65},{"ruleId":"133","severity":1,"message":"137","line":311,"column":59,"nodeType":"135","messageId":"136","endLine":311,"endColumn":61},{"ruleId":"116","severity":1,"message":"138","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":20},{"ruleId":"124","severity":1,"message":"139","line":45,"column":8,"nodeType":"126","endLine":45,"endColumn":13,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"141","line":47,"column":5,"nodeType":"122","messageId":"142","endLine":68,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":33,"column":52,"nodeType":"145","messageId":"146","endLine":33,"endColumn":54},{"ruleId":"143","severity":1,"message":"144","line":55,"column":44,"nodeType":"145","messageId":"146","endLine":55,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":68,"column":44,"nodeType":"145","messageId":"146","endLine":68,"endColumn":46},{"ruleId":"143","severity":1,"message":"147","line":163,"column":69,"nodeType":"145","messageId":"148","endLine":163,"endColumn":71},{"ruleId":"143","severity":1,"message":"147","line":183,"column":77,"nodeType":"145","messageId":"148","endLine":183,"endColumn":79},{"ruleId":"143","severity":1,"message":"144","line":10,"column":44,"nodeType":"145","messageId":"146","endLine":10,"endColumn":46},{"ruleId":"116","severity":1,"message":"149","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"124","severity":1,"message":"150","line":48,"column":35,"nodeType":"151","endLine":48,"endColumn":40},{"ruleId":"124","severity":1,"message":"152","line":27,"column":28,"nodeType":"153","endLine":27,"endColumn":39},{"ruleId":"116","severity":1,"message":"154","line":55,"column":13,"nodeType":"118","messageId":"119","endLine":55,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":72,"column":8,"nodeType":"126","endLine":72,"endColumn":10,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Clock' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'useParams' is defined but never used.","'axios' is defined but never used.","'fetch' is assigned a value but never used.","Read-only global 'fetch' should not be modified.","nativeReassign","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'EventEmitter' is defined but never used.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["159"],"Nested block is redundant.","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Link' is defined but never used.","Assignments to the 'checkCookie' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'username' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'order' is assigned a value but never used.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"161","fix":"165"},"Update the dependencies array to be: [id]",{"range":"166","text":"167"},"Update the dependencies array to be: [type, url]",{"range":"168","text":"169"},{"range":"170","text":"167"},[687,689],"[id]",[1499,1504],"[type, url]",[2497,2499]]