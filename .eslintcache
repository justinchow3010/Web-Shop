[{"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\index.js":"1","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\reportWebVitals.js":"2","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\App.js":"3","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\layout\\layout.js":"4","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\clock.js":"5","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product.js":"6","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\route.js":"7","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\pages.js":"8","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\main.js":"9","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\breadcrumb.js":"10","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\admin.js":"11","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product_page.js":"12","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\shopp_cart.js":"13","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\tools\\event_emitter.js":"14","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\addto_cart_button.js":"15"},{"size":504,"mtime":1614865240505,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":443,"mtime":1614075551151,"results":"19","hashOfConfig":"17"},{"size":4262,"mtime":1615371850236,"results":"20","hashOfConfig":"17"},{"size":650,"mtime":1612425831483,"results":"21","hashOfConfig":"17"},{"size":1902,"mtime":1615385526784,"results":"22","hashOfConfig":"17"},{"size":702,"mtime":1614519641569,"results":"23","hashOfConfig":"17"},{"size":312,"mtime":1614409085832,"results":"24","hashOfConfig":"17"},{"size":586,"mtime":1615371821536,"results":"25","hashOfConfig":"17"},{"size":1472,"mtime":1614525043066,"results":"26","hashOfConfig":"17"},{"size":19785,"mtime":1614874477605,"results":"27","hashOfConfig":"17"},{"size":4204,"mtime":1615371841182,"results":"28","hashOfConfig":"17"},{"size":4699,"mtime":1615392186538,"results":"29","hashOfConfig":"17"},{"size":74,"mtime":1615275368418,"results":"30","hashOfConfig":"17"},{"size":1001,"mtime":1615391480400,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4r9nsy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\index.js",[],["70","71"],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\reportWebVitals.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\App.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\layout\\layout.js",["72","73","74"],"import React, { useState, useEffect } from 'react';\r\nimport Clock from '../partials/clock';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ShoppingCart from '../shopp_cart'\r\n\r\n//layout\r\nexport default function Layout(props) {\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/category.php\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        console.log(list);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">GLOBAL SHOP</Link>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/backend/admin\" className=\"nav-link\">Admin Panel</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"my-2 my-lg-0\">\r\n                            <ShoppingCart />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <nav className=\"nav d-flex\">\r\n                    {list.map((catName) => {\r\n                        return <Link to={`/${catName.name}`} className=\"p-2 text-muted fs-2\">{catName.name}</Link>\r\n                    })}\r\n                </nav>\r\n            </div>\r\n            {props.children}\r\n            <footer className=\"text-muted\"> @2021 All rights reserved to Justin</footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n{/*<nav className=\"navbar navbar-expand-lg\">\r\n                <h2 className=\"navbar-brand\"><Link to=\"/\">GLOBAL SHOP</Link></h2>\r\n                <div className=\"collaspe navbar-collapse\">\r\n                    <div className=\"navbar-nav\">\r\n\r\n                        <Clock className=\"nav-item\" />\r\n                        <Link to=\"/backend/admin\" className=\"nav-item\">Admin Panel</Link>\r\n                        <div className=\"cart nav-item\">\r\n                            Shopping Cart\r\n                                <div className=\"drop-down\">\r\n                                <table className=\"cart-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Item</th>\r\n                                            <th>Quantity</th>\r\n                                            <th>Price</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Item 1</td>\r\n                                            <td><input type=\"number\" className=\"item-input\"></input></td>\r\n                                            <td>@ $100</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Item 2</td>\r\n                                            <td><input type=\"number\" className=\"item-input\"></input></td>\r\n                                            <td>@ $100</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                    Total Price: $200\r\n                                    <button type=\"button\" className=\"btn btn-secondary\">Checkout</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"category-list nav-item\">\r\n                            {list.map((catName) => {\r\n                                return <p><Link to={`/${catName.name}`}>{catName.name}</Link></p>\r\n                            })}\r\n                            Shoes\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>*/}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\clock.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product.js",["75"],"import React, { useState, useEffect } from 'react';\r\nimport BreadCrumb from './partials/breadcrumb';\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddToCartButon from './partials/addto_cart_button'\r\n\r\n//product page\r\nexport default function Product(props) {\r\n    const [list, setList] = useState([]);\r\n    var { id } = useParams();\r\n    const link = props.location.pathname.slice(1).split(\"/\");\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/product.php\";\r\n        axios.get(url, { params: { pid: id } })\r\n            .then(res => {\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n\r\n    const onMatchedRoutes = (matchedRoutes) => {\r\n        return [\r\n            ...matchedRoutes.slice(0, 1),\r\n            {\r\n                route: {\r\n                    path: `/${link[0]}`,\r\n                    breadcrumbName: link[0]\r\n                }\r\n            },\r\n            {\r\n                route: {\r\n                    path: `/${link[0]}/${link[1]}`,\r\n                    breadcrumbName: link[1]\r\n                }\r\n            }\r\n        ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <BreadCrumb locationPathname={props.location.pathname} onMatchedRoutes={onMatchedRoutes} />\r\n            {list.map((info, index) => {\r\n                return <div className=\"product-info d-flex\">\r\n                    <img src={`data:image/png;base64,${info.image}`} alt=\"Shoe\" className=\"content-img\"></img>\r\n                    <div className=\"ml-4\">\r\n                        <h2>{info.name}</h2>\r\n                        <p>Price: ${info.price}</p>\r\n                        <AddToCartButon pid={id} />\r\n                        <div>Description: <p>{info.description}</p> </div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\route.js",["76"],"import { useParams } from 'react-router-dom';\r\nimport { Main, Product, Admin, ProductPage } from './pages';\r\nconst rootPath = process.env.PUBLIC_URL;\r\n\r\nconst routes = [\r\n  {\r\n    path: `${rootPath}/`,\r\n    component: Main,\r\n    exact: true,\r\n    breadcrumbName: \"Home\"\r\n  },\r\n  {\r\n    path: `${rootPath}/backend/admin`,\r\n    exact: true,\r\n    component: Admin\r\n  },\r\n  {\r\n    path: `${rootPath}/:catid`,\r\n    component: ProductPage,\r\n    breadcrumbName: \"Category\",\r\n    routes: [\r\n      {\r\n        path: `${rootPath}/:catid/:id`,\r\n        exact: true,\r\n        component: Product,\r\n        breadcrumbName: \"Product\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path : \"*\"\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\nexport default routes;","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\pages.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\main.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\breadcrumb.js",[],["77","78"],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\backend\\admin.js",["79","80","81","82"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\n//admin page\r\n/*function Add() {\r\n    return (\r\n        <div>\r\n            <div className=\"col-md-6 order-md-1\">\r\n                <h4 className=\"mb-3\">New Product</h4>\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Category*</label>\r\n                        <div className=\"input-group\">\r\n                            <select className=\"custom-select\" name=\"productCatid\" onChange={this.handleInput}>\r\n                                <option value>Choose...</option>\r\n                                {this.state.catList.map((info, index) => {\r\n                                    return <option value={info.catid}>{info.name}</option>\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Name*</label>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"ProductName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Price*</label>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"price\" placeholder=\"Price\" required=\"\" onChange={this.handleInput}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Description</label>\r\n                        <div className=\"input-group\">\r\n                            <textarea className=\"form-control\" name=\"description\" rows=\"3\" onChange={this.handleInput}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Image*</label>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Upload</span>\r\n                            </div>\r\n                            <div className=\"custom-file\">\r\n                                <input type=\"file\" className=\"custom-file-input\" name=\"image\" onChange={this.handleInput}></input>\r\n                                {this.state.image == \"\" ? <label className=\"custom-file-label\" htmlFor=\"image\">Choose one</label> : <label className=\"custom-file-label\" htmlFor=\"image\">{this.state.image.name}</label>}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"username\">Preview</label>\r\n                            {this.state.image != \"\" ? <img src={URL.createObjectURL(this.state.image)} alt=\"product\" className=\"list-img\"></img> : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"btn btn-dark\" name=\"action\" value=\"addProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 order-md-1\">\r\n                <h4 className=\"mb-3\">New Category</h4>\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Name*</label>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"CategoryName\" placeholder=\"Name\" required=\"\" name=\"CategoryName\" onChange={this.handleInput}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"btn btn-dark\" name=\"action\" value=\"addCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n*/\r\n\r\n\r\nexport default class Admin extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            CategoryName: \"\",\r\n            ProductName: \"\",\r\n            price: 0,\r\n            description: \"\",\r\n            catList: [],\r\n            productList: [],\r\n            productCatid: 0,\r\n            productId: 0,\r\n            action: \"\",\r\n            toChange: \"\",\r\n            image: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"/admin/category.php\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ catList: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n        console.log(this.state.catList);\r\n\r\n        url = \"/admin/product.php\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ productList: res.data });\r\n            })\r\n            .catch(error => console.log(error));\r\n        console.log(this.state.productList);\r\n    }\r\n\r\n    handleInput = async e => {\r\n        if (e.target.name === \"image\") {\r\n            this.setState({ image: e.target.files[0] })\r\n            console.log(e.target.files[0]);\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        console.log(e.target.name);\r\n        console.log(this.state.action);\r\n    }\r\n\r\n    handleCategorySumbit = e => {\r\n        e.preventDefault();\r\n        this.handleInput(e);\r\n        let formData = new FormData();\r\n        formData.append(\"name\", this.state.CategoryName);\r\n        formData.append(\"action\", e.target.value);\r\n        formData.append(\"category\", this.state.productCatid);\r\n        formData.append(\"toChange\", this.state.toChange);\r\n        const url = \"/admin/category.php\";\r\n        axios.post(url, formData)\r\n            .then(res => { console.log(res.data); window.location.reload() })\r\n            .catch(err => console.log(err));\r\n        console.log(this.state.CategoryName)\r\n    }\r\n\r\n    handleProductSumbit = e => {\r\n        e.preventDefault();\r\n        this.handleInput(e);\r\n        let formData = new FormData();\r\n        formData.append(\"name\", this.state.ProductName);\r\n        formData.append(\"price\", this.state.price);\r\n        formData.append(\"description\", this.state.description);\r\n        formData.append(\"category\", this.state.productCatid);\r\n        formData.append(\"action\", e.target.value);\r\n        formData.append(\"pid\", this.state.productId);\r\n        formData.append(\"toChange\", this.state.toChange);\r\n        formData.append(\"image\", this.state.image);\r\n        const url = \"/admin/product.php\";\r\n        axios.post(url, formData)\r\n            .then(res => { console.log(res.data); window.location.reload() })\r\n            .catch(err => console.log(err));\r\n        console.log(this.state.CategoryName)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"py-5 text-center\">\r\n                    <h2>Admin Panel</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">New Product</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Category*</label>\r\n                                <div className=\"input-group\">\r\n                                    <select className=\"custom-select\" name=\"productCatid\" onChange={this.handleInput}>\r\n                                        <option value>Choose...</option>\r\n                                        {this.state.catList.map((info, index) => {\r\n                                            return <option value={info.catid}>{info.name}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Name*</label>\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"ProductName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Price*</label>\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"price\" placeholder=\"Price\" required=\"\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Description</label>\r\n                                <div className=\"input-group\">\r\n                                    <textarea className=\"form-control\" name=\"description\" rows=\"3\" onChange={this.handleInput}></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Image*</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\">Upload</span>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" name=\"image\" onChange={this.handleInput}></input>\r\n                                        {this.state.image == \"\" ? <label className=\"custom-file-label\" htmlFor=\"image\">Choose one</label> : <label className=\"custom-file-label\" htmlFor=\"image\">{this.state.image.name}</label>}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"username\">Preview</label>\r\n                                    {this.state.image != \"\" ? <img src={URL.createObjectURL(this.state.image)} alt=\"product\" className=\"list-img\"></img> : \"\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"addProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">New Category</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Name*</label>\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"CategoryName\" placeholder=\"Name\" required=\"\" name=\"CategoryName\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"addCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">Delete Product</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Choose one</label>\r\n                                <div className=\"input-group\">\r\n                                    <select className=\"custom-select\" name=\"productId\" onChange={this.handleInput}>\r\n                                        <option value>Choose...</option>\r\n                                        {this.state.productList.map((info, index) => {\r\n                                            return <option value={info.pid}>{info.name}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"deleteProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">Delete Category</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Choose one</label>\r\n                                <div className=\"input-group\">\r\n                                    <select className=\"custom-select\" name=\"productCatid\" onChange={this.handleInput}>\r\n                                        <option value>Choose...</option>\r\n                                        {this.state.catList.map((info, index) => {\r\n                                            return <option value={info.catid}>{info.name}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"deleteCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">Update Product</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <p>Fill in all infomation or it will get empty.</p>\r\n                                <label htmlFor=\"username\">Which one to change?</label>\r\n                                <div className=\"input-group\">\r\n                                    <select className=\"custom-select\" name=\"toChange\" onChange={this.handleInput}>\r\n                                        <option value>Choose...</option>\r\n                                        {this.state.productList.map((info, index) => {\r\n                                            return <option value={info.pid}>{info.name}, ${info.price}, {info.description}</option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Name*</label>\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"ProductName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Price*</label>\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"price\" placeholder=\"Price\" required=\"\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Description</label>\r\n                                <div className=\"input-group\">\r\n                                    <textarea className=\"form-control\" name=\"description\" rows=\"3\" onChange={this.handleInput}></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Image*</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\">Upload</span>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" name=\"image\" onChange={this.handleInput}></input>\r\n                                        {this.state.image == \"\" ? <label className=\"custom-file-label\" htmlFor=\"image\">Choose one</label> : <label className=\"custom-file-label\" htmlFor=\"image\">{this.state.image.name}</label>}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"username\">Preview</label>\r\n                                    {this.state.image != \"\" ? <img src={URL.createObjectURL(this.state.image)} alt=\"product\" className=\"list-img\"></img> : \"\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"updateProduct\" onClick={this.handleProductSumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 order-md-1\">\r\n                        <h4 className=\"mb-3\">Update Category</h4>\r\n                        <form>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"username\">Choose one</label>\r\n                                <div className=\"input-group\">\r\n                                    <select className=\"custom-select\" name=\"toChange\" onChange={this.handleInput}>\r\n                                        <option value>Choose...</option>\r\n                                        {this.state.catList.map((info, index) => {\r\n                                            return <option value={info.catid}>{info.name}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"CategoryName\" placeholder=\"Name\" required=\"\" onChange={this.handleInput}></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <button className=\"btn btn-dark\" name=\"action\" value=\"updateCat\" onClick={this.handleCategorySumbit}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\product_page.js",["83","84","85"],"import list_title from '../assets/images/list-title.jpg';\r\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport BreadCrumb from './partials/breadcrumb';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Product } from '../pages'\r\nimport EventEmitter from './tools/event_emitter'\r\nimport AddToCartButon from './partials/addto_cart_button'\r\n\r\n//main page\r\nfunction ProductPage() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/:cat\" exact component={Item} />\r\n            <Route path=\"/:cat/:id\" component={Product} />\r\n        </Switch>\r\n    );\r\n}\r\nexport default ProductPage;\r\n\r\nfunction Item(props) {\r\n    const [list, setList] = useState([]);\r\n    const items = [];\r\n    //const [catList, setCatList] = useState([]);\r\n    const { url } = useRouteMatch();\r\n    var type = url.substring(1);\r\n    /*const para = useParams().cat;\r\n    var inside = false;*/\r\n\r\n    useEffect(() => {\r\n        const url = \"/admin/product.php\";\r\n        axios.get(url, { params: { catName: type } })\r\n            .then(res => {\r\n                //console.log(res.data);\r\n                setList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        //console.log(list);\r\n        /*axios.get(\"/admin/category.php\")\r\n            .then(res => {\r\n                setCatList(res.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n        if (catList.includes(para)) inside = true;*/\r\n    }, [url])\r\n\r\n    {\r\n        list.map((info, index) => {\r\n            items.push(\r\n                <div className=\"product col-md-4\">\r\n                    <div className=\"card mb-5 border-0\">\r\n                        <Link to={`${url}/${list[index].pid}`}>\r\n                            <img src={`data:image/png;base64,${list[index].image}`} alt=\"Shoe\" className=\"card-img-top list-img\"></img>\r\n                        </Link>\r\n                        <hr className=\"mb-0\" />\r\n                        <div className=\"card-body pt-1\">\r\n                            <div className=\"card-text text-center\">\r\n                                <Link to={`${url}/${list[index].pid}`}>{info.name}</Link>\r\n                                <p className=\"m-0\">Price ${info.price}</p>\r\n                                <AddToCartButon pid={info.pid} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n            return items;\r\n        })\r\n    }//production\r\n\r\n    /*{\r\n        items.push(\r\n            <div className=\"product col-md-4\">\r\n                <div className=\"card mb-5 border-0\">\r\n                    <Link to=\"\">\r\n                        <img src=\"\" alt=\"Shoe\" className=\"card-img-top list-img\"></img>\r\n                    </Link>\r\n                    <hr className=\"mb-0\" />\r\n                    <div className=\"card-body pt-1\">\r\n                        <div className=\"card-text text-center\">\r\n                            <Link to=\"\">dsdsds</Link>\r\n                            <p className=\"m-0\">Price $23232323</p>\r\n                            <AddToCartButon list={list} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }///testing*/\r\n\r\n    const onMatchedRoutes = (matchedRoutes) => {\r\n        return [\r\n            ...matchedRoutes.slice(0, -1),\r\n            {\r\n                route: {\r\n                    path: `/${type}`,\r\n                    breadcrumbName: type\r\n                }\r\n            }\r\n        ];\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {/*console.log(items)*/}\r\n            {items.length > 0 ?\r\n                [\r\n                    <BreadCrumb locationPathname={props.location.pathname} onMatchedRoutes={onMatchedRoutes} />,\r\n                    <div className=\"list-title\">\r\n                        <img src={list_title} alt=\"list-title\"></img>\r\n                    </div>,\r\n                    <div className=\"row\">\r\n                        {items}\r\n                    </div>,\r\n                ]\r\n                : <h1 className=\"text-center\">.......</h1>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\shopp_cart.js",["86","87","88","89"],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\tools\\event_emitter.js",[],"C:\\Users\\Chow\\Desktop\\Coding Folder\\commerce-project\\src\\components\\partials\\addto_cart_button.js",["90"],"import React from 'react'\r\nimport EventEmitter from '../tools/event_emitter'\r\n\r\nexport default function CartButton(props) {\r\n    function addToCart(pid, num) {\r\n        var items = [];\r\n        var json = localStorage.getItem(\"cart\");\r\n        var check = false;\r\n        if (json !== null) {\r\n            JSON.parse(json).map((data, i) => {\r\n                if (data.pid === pid) {\r\n                    var num = parseInt(data.quan, 10);\r\n                    num += 1;\r\n                    data.quan = num;\r\n                    check = true;\r\n                }\r\n                items.push(data);\r\n            })\r\n        }\r\n        if (check === false) items.push({ \"pid\": pid, \"quan\": num });\r\n        localStorage.setItem('cart', JSON.stringify(items));\r\n        //emit event\r\n        EventEmitter.emit(\"updateCart\", {\r\n            items: items\r\n        })\r\n    }\r\n\r\n    return(\r\n        <button className=\"btn btn-primary add\" onClick={() => addToCart(props.pid, 1)}>Add to cart</button>\r\n    )\r\n}",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":20,"column":8,"nodeType":"101","endLine":20,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":53,"column":1,"nodeType":"105","messageId":"106","endLine":96,"endColumn":22},{"ruleId":"99","severity":1,"message":"107","line":20,"column":8,"nodeType":"101","endLine":20,"endColumn":10,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":19},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":215,"column":59,"nodeType":"114","messageId":"115","endLine":215,"endColumn":61},{"ruleId":"112","severity":1,"message":"116","line":220,"column":55,"nodeType":"114","messageId":"115","endLine":220,"endColumn":57},{"ruleId":"112","severity":1,"message":"113","line":325,"column":59,"nodeType":"114","messageId":"115","endLine":325,"endColumn":61},{"ruleId":"112","severity":1,"message":"116","line":330,"column":55,"nodeType":"114","messageId":"115","endLine":330,"endColumn":57},{"ruleId":"95","severity":1,"message":"117","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":20},{"ruleId":"99","severity":1,"message":"118","line":45,"column":8,"nodeType":"101","endLine":45,"endColumn":13,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"120","line":47,"column":5,"nodeType":"105","messageId":"121","endLine":68,"endColumn":6},{"ruleId":"122","severity":1,"message":"123","line":31,"column":52,"nodeType":"124","messageId":"125","endLine":31,"endColumn":54},{"ruleId":"122","severity":1,"message":"123","line":53,"column":44,"nodeType":"124","messageId":"125","endLine":53,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":66,"column":44,"nodeType":"124","messageId":"125","endLine":66,"endColumn":46},{"ruleId":"122","severity":1,"message":"126","line":121,"column":73,"nodeType":"124","messageId":"127","endLine":121,"endColumn":75},{"ruleId":"122","severity":1,"message":"123","line":10,"column":44,"nodeType":"124","messageId":"125","endLine":10,"endColumn":46},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Clock' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["131"],"'useParams' is defined but never used.",["128"],["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'EventEmitter' is defined but never used.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["132"],"Nested block is redundant.","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [list]",{"range":"139","text":"140"},"Update the dependencies array to be: [id]",{"range":"141","text":"142"},"Update the dependencies array to be: [type, url]",{"range":"143","text":"144"},[599,601],"[list]",[687,689],"[id]",[1499,1504],"[type, url]"]